steps:
# Step:1= Build Docker image
- name: 'docker'
  id: 'BuildImage'
  args: ['build', '--no-cache', '-t', 'gcr.io/$PROJECT_ID/${_PROJECT_NAME}:$SHORT_SHA', '-t', 'gcr.io/$PROJECT_ID/${_PROJECT_NAME}:${_APP_ENV}', '-f', '.docker/Dockerfile', '.']

# Step:2a = Store image SHA
- name: 'gcr.io/cloud-builders/docker'
  id: 'StoreImageSHA'
  args: ['push', 'gcr.io/$PROJECT_ID/${_PROJECT_NAME}:$SHORT_SHA']  
  waitFor: ['BuildImage']

# Step:2b = Store image _APP_ENV
- name: 'gcr.io/cloud-builders/docker'
  id: 'StoreImage_APP_ENV'
  args: ['push', 'gcr.io/$PROJECT_ID/${_PROJECT_NAME}:${_APP_ENV}']  
  waitFor: ['BuildImage']

# Step:3 = Deploy service
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'DeployService'
  entrypoint: 'gcloud'
  args: ['app', 'deploy', '--image-url=gcr.io/$PROJECT_ID/${_PROJECT_NAME}:${_APP_ENV}', '--version', '$SHORT_SHA']
  waitFor: ['StoreImage_APP_ENV']

images: ['gcr.io/$PROJECT_ID/${_PROJECT_NAME}']

# When setting up the trigger in cloud build set the _APP_ENV to be dev, test, uat or prod
# REMEMBER The user defined variable should always start with an _
substitutions:
  _APP_ENV: ''
  _PROJECT_NAME: ''
#Timeout
timeout: 1200s